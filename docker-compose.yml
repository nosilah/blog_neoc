version: '3.5'
#Docker Networks
networks:
  network-app:
    driver: bridge


# #Volumes>
volumes:
  mysql_data:
    driver: local

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    links:
      - auth-app
    ports:
      - "3336:3306"
    volumes:
      - ./db/mysql/my.cnf:/etc/mysql/mysql.conf.d/bind.cnf
      - mysql_data:/var/lib/mysql
    networks:
      - network-app
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: authportal
      MYSQL_USER: auth
      MYSQL_PASSWORD: rootpass
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - network-app
  nginx:
    image: nginx
    container_name: auth-nginx
    ports:
      - "8088:80"
    volumes:
      - ./auth-laravel:/var/www/html
      - ./nginx/docker-vhost.conf:/etc/nginx/conf.d/default.conf
    networks:
      - network-app

  auth-app:
    image: repox/laravel-dev-php:8.0
    container_name: auth-app
    volumes:
      - ./auth-laravel:/var/www/html
    working_dir: /var/www/html
    # command:  chown -R www-data:www-data ./storage 
    networks:
      - network-app
    # command: 'apt-get update && apt-get install -y default-mysql-client'
   
  phpmyadmin_mysql:
    image: phpmyadmin/phpmyadmin
    links: 
        - mysql:db
    ports:
        - 86:80
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: authportal
      MYSQL_PASSWORD: rootpass
    networks:
      - network-app
  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - "1026:1025"
      - "8026:8025"
    networks:
      - network-app
  express:
    image: alnosila/node
    container_name: express
    ports:
      - 3001:3000
    volumes:
      - ./express_test:/var/www
    working_dir: /var/www
    tty: true
    networks:
      - network-app
    

#   nginx:
#     build:
#       context: ./nginx
#     container_name: auth-nginx
#     volumes:
#       - ./auth-laravel:/var/www
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#       - ./nginx/sites/:/etc/nginx/sites-available
#       - ./nginx/conf.d/:/etc/nginx/conf.d
# #      - ../logs:/var/log
#     ports:
#       - 8088:80

#   symfony-database:
#     image: postgres
#     restart: always
#     environment:
#       POSTGRES_DB: ${DATABASE_NAME}
#       POSTGRES_USER: ${DATABASE_USER}
#       POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
#     volumes:
#       - ../database/symfony-sql:/var/lib/postgresql/data

#   symfony-mongo:
#     image: mongo
#     restart: always
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
#       MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
#       MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
#     volumes:
#       - ../database/symfony-mongo:/data/db

#   adminer:
#     image: adminer
#     restart: always
#     ports:
#       - 8083:8080

#   mongo-express:
#     image: mongo-express
#     ports:
#       - 8084:8081
#     environment:
#       ME_CONFIG_MONGODB_SERVER: symfony-mongo
#       ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
#       ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
#       ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_USER}
#       ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_PASSWORD}
#     depends_on:
#       - symfony-mongo

#   php-fpm:
#     build:
#       context: ./php-fpm
#     depends_on:
#       - symfony-database
#     environment:
#       - APP_ENV=${APP_ENV}
#       - APP_SECRET=${APP_SECRET}
#       - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@symfony-database:5432/${DATABASE_NAME}?serverVersion=13&charset=utf8
#       - MONGO_SERVER=mongodb://symfony-mongo:27017
#       - MONGO_USER=${MONGO_USER}
#       - MONGO_PASSWORD=${MONGO_PASSWORD}
#       - MONGO_DATABASE=${MONGO_DATABASE}
#       - INNER_NETWORK_SECRET=${INNER_NETWORK_SECRET}
#     volumes:
#       - ../comp-symfony:/var/www

#   php-cli:
#     build:
#       context: ./php-cli
#     depends_on:
#       - symfony-database
#     environment:
#       - APP_ENV=${APP_ENV}
#       - APP_SECRET=${APP_SECRET}
#       - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@symfony-database:5432/${DATABASE_NAME}?serverVersion=13&charset=utf8
#       - MONGO_SERVER=mongodb://symfony-mongo:27017
#       - MONGO_USER=${MONGO_USER}
#       - MONGO_PASSWORD=${MONGO_PASSWORD}
#       - MONGO_DATABASE=${MONGO_DATABASE}
#     volumes:
#       - ../comp-symfony:/var/www


#   python-posts:
#     build:
#       context: ./python-cli
#     command: flask run --host=0.0.0.0
#     environment:
#       - FLASK_APP:app.py
#       - MONGO_SERVER=mongodb://symfony-mongo:27017
#       - MONGO_USER=${MONGO_USER}
#       - MONGO_PASSWORD=${MONGO_PASSWORD}
#       - MONGO_DATABASE=${MONGO_DATABASE}
#       - INNER_NETWORK_SECRET=${INNER_NETWORK_SECRET}
#       - FLASK_ENV=development
#     working_dir: /app
#     volumes:
#       - ../comp-posts:/app
#     ports:
#       - 8085:5000